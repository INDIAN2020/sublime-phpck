{
    "scope": "source.php - meta",
    "completions": [
        {"trigger":"__halt_compiler()","contents":"__halt_compiler(${1})"},
        "abstract ",
        "and ",
        {"trigger":"array()","contents":"array(${1})"},
        "as ",
        "break",
        "callable ",
        {"trigger":"case","contents":"case '${1}':"},
        {"trigger":"catch","contents":"catch (${1})"},
        "class ",
        "clone ",
        "const ",
        "continue",
        {"trigger":"declare()","contents":"declare(${1})"},
        {"trigger":"default","contents":"default:"},
        {"trigger":"die()","contents":"die(${1})"},
        "do ",
        "echo ",
        "else ",
        {"trigger":"elseif","contents":"elseif (${1})"},
        {"trigger":"empty()","contents":"empty(${1})"},
        {"trigger":"enddeclare","contents":"enddeclare;"},
        {"trigger":"endfor","contents":"endfor;"},
        {"trigger":"endforeach","contents":"endforeach;"},
        {"trigger":"endif","contents":"endif;"},
        {"trigger":"endswitch","contents":"endswitch;"},
        {"trigger":"endwhile","contents":"endwhile;"},
        {"trigger":"eval()","contents":"eval(${1})"},
        {"trigger":"exit()","contents":"exit(${1})"},
        "extends ",
        "final ",
        {"trigger":"finally","contents":"finally {\n\t${1}\n}"},
        {"trigger":"for","contents":"for (${1})"},
        {"trigger":"foreach","contents":"foreach (${1})"},
        "function ",
        "global ",
        "goto ",
        {"trigger":"if","contents":"if (${1})"},
        "implements ",
        {"trigger":"include","contents":"include '${1}';"},
        {"trigger":"include_once","contents":"include_once '${1}';"},
        "instanceof ",
        "insteadof ",
        "interface ",
        {"trigger":"isset()","contents":"isset(${1})"},
        {"trigger":"list()","contents":"list(${1})"},
        "namespace ",
        "new ",
        "or ",
        "print ",
        "private ",
        "protected ",
        "public ",
        {"trigger":"require","contents":"require '${1}';"},
        {"trigger":"require_once","contents":"require_once '${1}';"},
        "return ",
        "static ",
        {"trigger":"switch","contents":"switch (${1})"},
        "throw ",
        "trait ",
        {"trigger":"try","contents":"try {\n\t${1}\n}"},
        {"trigger":"unset()","contents":"unset(${1})"},
        "use ",
        "var ",
        {"trigger":"while","contents":"while (${1})"},
        "xor ",
        "yield "
    ]
}
